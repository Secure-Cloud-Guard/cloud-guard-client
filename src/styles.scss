@use '@angular/material' as mat;
@include mat.core();

// Tailwind directives
@tailwind base;
@tailwind components;
@tailwind utilities;

// Any custom styles you add to Tailwind with @layer will automatically support
// Tailwindâ€™s modifier syntax for handling things like hover states,
// responsive breakpoints, dark mode, and more.

@layer utilities {
  // Custom global styles
  @import "styles/scrollbar";
  @import "styles/custom";
  @import "styles/mat-input-field";
  @import "styles/mat-button";
  @import "styles/mat-tab-group";
}

// Custom fonts
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

// Custom logger function
$tab: '\0009';
$newline: '\000D\000A';

@function pretty-map($map, $s: '') {
  @each $key, $val in $map {
    @if type-of($val) == map {
      $s: '#{$s} #{$newline} #{$key}: ( #{pretty-map($val)} #{$newline} ), ';
    } @else {
      $s: '#{$s} #{$newline} #{$tab} #{$key}: #{$val}, ';
    }
  } // each
  @return $s;
}

$celadon-palette: (
  50: #e8feef,
  100: #c8fcd8,
  200: #a2fabf,
  300: #79f7a6,
  400: #59f192,
  500: #36eb7f,
  600: #2ada73,
  700: #1ac565,
  800: #0bb35a,
  900: #009144,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: rgba(black, 0.87),
    700: white,
    800: white,
    900: white,
  )
);

$aero-palette: (
  50: #e1f4fc,
  100: #b5e4f7,
  200: #86d2f1,
  300: #5bc0eb,
  400: #40b2e8,
  500: #28a6e5,
  600: #2498d7,
  700: #1d85c3,
  800: #1874b0,
  900: #0a558f,
  A100: #c2e4ff,
  A200: #addcff,
  A400: #1f9eff,
  A700: #00518f,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: white,
    A700: white,
  )
);

$crimson-palette: (
  50: #ffeaf0,
  100: #ffcad6,
  200: #f095a1,
  300: #e8697c,
  400: #f43f5d,
  500: #fc1c45,
  600: #ec0b43,
  700: #da003c,
  800: #cd0035,
  900: #bf0028,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

$cloud-primary: mat.define-palette($celadon-palette, 200, 50, 400);
$cloud-accent: mat.define-palette($aero-palette, 300, 100, 500);
$cloud-warn: mat.define-palette($crimson-palette, 600);

$cloud-theme: mat.define-light-theme((
  color: (
    primary: $cloud-primary,
    accent: $cloud-accent,
    warn: $cloud-warn,
  )
));

$cloud-theme-dark: mat.define-dark-theme((
  color: (
    primary: $cloud-primary,
    accent: $cloud-accent,
    warn: $cloud-warn,
  )
));


// Set the custom dark theme background
$cloud-theme-dark-color: map-get($cloud-theme-dark, color);
$cloud-theme-dark-color-background: map-get($cloud-theme-dark-color, background);
$cloud-theme-dark-color-background: map-merge($cloud-theme-dark-color-background, (
  background: #1f1f1f,
  card: #2f2f2f,
  dialog: #2f2f2f
));
$cloud-theme-dark-color: map-merge($cloud-theme-dark-color, ( background: $cloud-theme-dark-color-background ));
$cloud-theme-dark: map-merge($cloud-theme-dark, ( color: $cloud-theme-dark-color ));

// log dark theme with custom dark theme background
//@debug pretty-map($cloud-theme-dark);

html, body { height: 100%; }
body { margin: 0; font-family: 'Inter', sans-serif; }

.theme-dark {
  @include mat.all-component-themes($cloud-theme-dark);
}
.theme-light {
  @include mat.all-component-themes($cloud-theme);
}
